import streamlit as st
import pandas as pd
import plotly.express as px
from datetime import datetime

# --- Configura√ß√µes da P√°gina ---
st.set_page_config(
    page_title="OceanApp Brasil: Gr√°ficos e Pesquisa",
    layout="wide",
    initial_sidebar_state="collapsed",
)

# T√≠tulo Principal
st.title("üåä OceanApp Brasil: Gr√°ficos de Dados Abertos e Cultura Oce√¢nica")
st.subheader("An√°lise Simult√¢nea de Tend√™ncias Clim√°ticas e Conscientiza√ß√£o")
st.markdown("---")

# --- 1. Fun√ß√£o de Simula√ß√£o de Dados para Gr√°ficos ---
# NOTA: Esta fun√ß√£o SIMULA dados de fontes abertas (10 anos de Tend√™ncia e 48h de Previs√£o de Mar√©).
# Para usar DADOS REAIS: Substitua esta fun√ß√£o por chamadas a APIs Abertas (INMET, Marinha, etc.)
def get_dados_simulados():
    """Simula dados de tend√™ncias de 10 anos e previs√£o de 48h para demonstra√ß√£o."""
    
    # 1. Dados de Tend√™ncia Clim√°tica (10 anos)
    anos = pd.date_range(start='2015-01-01', periods=10, freq='Y')
    tendencia_data = {
        'Ano': anos,
        'Temp_Media_Anual_C': [25.0, 25.2, 25.4, 25.1, 25.3, 25.6, 25.8, 26.0, 26.2, 26.5],
        'Nivel_Medio_Mar_cm': [10.0, 10.5, 11.0, 11.2, 11.5, 11.9, 12.3, 12.8, 13.3, 14.0],
    }
    df_tendencia = pd.DataFrame(tendencia_data)
    df_tendencia['Ano'] = df_tendencia['Ano'].dt.year

    # 2. Dados de Previs√£o de Mar√© (48 horas)
    data_hoje = datetime.now().date()
    horas = pd.date_range(start=f'{data_hoje} 00:00', periods=48, freq='H') 
    mare_data = {
        'Data_Hora': horas,
        'Nivel_Mar√©_m': [0.5, 0.8, 1.2, 1.0, 0.6, 0.2, 0.1, 0.4, 0.9, 1.5, 1.3, 0.7, 0.4, 0.8, 1.3, 1.1, 0.7, 0.3, 0.2, 0.5, 1.0, 1.4, 1.2, 0.6] * 2,
    }
    df_mare = pd.DataFrame(mare_data).set_index('Data_Hora')
    
    return df_tendencia, df_mare

df_tendencia, df_mare = get_dados_simulados()


# --- 2. Defini√ß√£o dos T√≥picos Explicativos (Cultura Oce√¢nica e Clima) ---
TOPICOS = [
    {
        "titulo": "1. Aumento do N√≠vel do Mar",
        "causas": "Degelo polar e **expans√£o t√©rmica** da √°gua (aquecimento global).",
        "consequencias": "**Eros√£o costeira**, inunda√ß√µes frequentes e saliniza√ß√£o de len√ß√≥is fre√°ticos.",
        "dica": "Apoiar a adapta√ß√£o costeira e usar dados de **altimetria** (sat√©lites) para monitoramento local.",
    },
    {
        "titulo": "2. Acidifica√ß√£o Oce√¢nica",
        "causas": "Absor√ß√£o de **di√≥xido de carbono ($CO_2$)** da atmosfera (emiss√µes e **desmatamento** brasileiro).",
        "consequencias": "Dificuldade de corais e moluscos em formar conchas. Risco √† **aquicultura**.",
        "dica": "Reduzir a **pegada de carbono** e apoiar a restaura√ß√£o de biomas.",
    },
    {
        "titulo": "3. Eventos Clim√°ticos Extremos",
        "causas": "Altera√ß√µes em padr√µes oce√¢nicos e atmosf√©ricos (**El Ni√±o** e **La Ni√±a**).",
        "consequencias": "**Secas prolongadas** (Nordeste) e **chuvas torrenciais** (Sul/Sudeste), danos a portos.",
        "dica": "Consultar previs√µes de **INMET** e **Marinha** para seguran√ßa e planejamento.",
    },
    {
        "titulo": "4. Branqueamento de Corais",
        "causas": "**Aumento da temperatura da √°gua** (estresse t√©rmico) expulsa algas simbi√≥ticas.",
        "consequencias": "Morte de corais e perda de **biodiversidade** e de prote√ß√£o costeira natural.",
        "dica": "Apoiar a **conserva√ß√£o marinha** e usar protetores solares *reef safe*.",
    },
    {
        "titulo": "5. Polui√ß√£o Marinha por Pl√°stico",
        "causas": "Gest√£o inadequada de res√≠duos s√≥lidos em **cidades costeiras** e descarte em rios.",
        "consequencias": "Ingest√£o e sufocamento da **fauna marinha** e contamina√ß√£o por **micropl√°sticos**.",
        "dica": "Priorizar os 3 R's (**Reduzir, Reutilizar, Reciclar**) e participar de mutir√µes de limpeza.",
    },
]


# --- 3. Layout Principal em Colunas (Gr√°ficos e Explica√ß√µes Lado a Lado) ---

# Coluna Principal para Gr√°ficos
col_graficos = st.columns([1])[0] 
# Coluna Principal para a An√°lise/Pesquisa
col_pesquisa = st.columns([1])[0] 

# Usamos a estrutura do Streamlit para dividir os componentes

st.markdown("## üìä Visualiza√ß√£o de Dados Abertos (10 Anos)")
st.info("Gr√°ficos interativos gerados a partir de dados abertos (simulados) de tend√™ncias clim√°ticas no Brasil.")

# GR√ÅFICOS DE TEND√äNCIA (Temperatura e N√≠vel do Mar)
col_temp_graph, col_nivel_graph = st.columns(2)

with col_temp_graph:
    # Gr√°fico 1: Temperatura
    fig_temp_decada = px.line(
        df_tendencia,
        x='Ano',
        y='Temp_Media_Anual_C',
        title='Tend√™ncia de Temperatura M√©dia Anual (¬∞C)',
        labels={'Temp_Media_Anual_C': 'Temperatura M√©dia Anual (¬∞C)'},
        markers=True,
        height=300
    )
    st.plotly_chart(fig_temp_decada, use_container_width=True)

with col_nivel_graph:
    # Gr√°fico 2: N√≠vel do Mar
    fig_nivel_decada = px.bar(
        df_tendencia,
        x='Ano',
        y='Nivel_Medio_Mar_cm',
        title='Aumento do N√≠vel M√©dio do Mar (cm)',
        labels={'Nivel_Medio_Mar_cm': 'Aumento do N√≠vel (cm)'},
        height=300
    )
    st.plotly_chart(fig_nivel_decada, use_container_width=True)

st.markdown("---")

st.markdown("## üîé An√°lise Detalhada (Causas, Consequ√™ncias e Dicas)")
st.info("Os gr√°ficos mostram as tend√™ncias. Esta se√ß√£o explica as causas, consequ√™ncias e as a√ß√µes de **Cultura Oce√¢nica**.")

# Loop para exibir cada t√≥pico da pesquisa, alinhando-o ao gr√°fico de Mar√©
for i, topico in enumerate(TOPICOS):
    
    # Se for o T√≥pico 1, colocamos o Gr√°fico de Mar√© ao lado dele
    if i == 0:
        col_pesquisa_content, col_mare_graph = st.columns([1, 1])

        with col_mare_graph:
            st.markdown("### Previs√£o de Mar√© (48h)")
            st.caption("Gr√°fico crucial para seguran√ßa e gest√£o costeira (Marinha do Brasil/Simula√ß√£o).")
            # GR√ÅFICO 3: MAR√â
            fig_mare = px.area(
                df_mare,
                y='Nivel_Mar√©_m',
                title='Varia√ß√£o do N√≠vel da Mar√© em 48 Horas (Metros)',
                labels={'Nivel_Mar√©_m': 'N√≠vel da Mar√© (m)', 'Data_Hora': 'Data e Hora'},
                line_shape='spline',
                height=350
            )
            st.plotly_chart(fig_mare, use_container_width=True)

        with col_pesquisa_content:
            st.markdown(f"### {topico['titulo']}")
            col_causas, col_cons, col_dica = st.columns([1, 1, 1])
            with col_causas:
                st.markdown(f"**Causas:**")
                st.write(f"üëâ {topico['causas']}")
            with col_cons:
                st.markdown(f"**Consequ√™ncias:**")
                st.warning(f"‚ö†Ô∏è {topico['consequencias']}")
            with col_dica:
                st.markdown(f"**Dica (Cultura Oce√¢nica):**")
                st.success(f"‚úÖ {topico['dica']}")
        
        st.markdown("---")

    # Demais T√≥picos da Pesquisa, exibidos em linha
    else:
        st.markdown(f"### {topico['titulo']}")
        col_causas, col_cons, col_dica = st.columns([1, 1, 1])
        
        with col_causas:
            st.markdown(f"**Causas:**")
            st.write(f"üëâ {topico['causas']}")
        
        with col_cons:
            st.markdown(f"**Consequ√™ncias:**")
            st.warning(f"‚ö†Ô∏è {topico['consequencias']}")
        
        with col_dica:
            st.markdown(f"**Dica (Cultura Oce√¢nica):**")
            st.success(f"‚úÖ {topico['dica']}")
        
        if i < len(TOPICOS) - 1:
            st.markdown("---")

st.caption("O aplicativo utiliza dados abertos (simulados) com a estrutura correta para integra√ß√£o de APIs reais do INMET, Marinha, etc.")
