import streamlit as st
import pandas as pd
import plotly.express as px
import numpy as np
from datetime import datetime

# --- Configura√ß√µes da P√°gina ---
st.set_page_config(
    page_title="OceanApp Brasil: Visualiza√ß√£o Unificada",
    layout="wide",
    initial_sidebar_state="collapsed",
)

st.title("üåä OceanApp Brasil: Cultura Oce√¢nica e Clima")
st.subheader("Painel de Visualiza√ß√£o Unificado de Dados Abertos e An√°lise para o Litoral Brasileiro")
st.markdown("---")


# ‚ö†Ô∏è FUN√á√ïES DE INTEGRA√á√ÉO DE DADOS REAIS (TEMPLATE DE SIMULA√á√ÉO)
# O c√≥digo abaixo SIMULA a obten√ß√£o de dados das fontes (INMET, Marinha, NOAA, etc.)
# Voc√™ deve substituir o conte√∫do destas fun√ß√µes pela sua l√≥gica de chamada de API/leitura de arquivo para ter dados reais.

@st.cache_data
def get_dados_simulados():
    """Gera todos os DataFrames simulados para os gr√°ficos e an√°lises."""
    
    # 1. INMET (Temperatura M√©dia Anual - 10 Anos)
    anos = pd.date_range(start='2015-01-01', periods=10, freq='Y')
    df_tendencia = pd.DataFrame({
        'Ano': anos.year,
        'Temp_Media_Anual_C': [25.0, 25.2, 25.4, 25.1, 25.3, 25.6, 25.8, 26.0, 26.2, 26.5],
    })
    
    # 2. OpenWeatherMap (Vento Di√°rio - 7 dias)
    dias = pd.date_range(start=datetime.now(), periods=7, freq='D')
    df_vento = pd.DataFrame({
        'Dia': dias.strftime('%a, %d/%m'),
        'Velocidade_Vento_N√≥s': [10, 12, 8, 9, 15, 11, 7],
    })
    
    # 3. NOAA (N√≠vel do Mar - 30 Anos)
    anos_nivel = pd.date_range(start='1990-01-01', periods=30, freq='Y')
    df_nivel_longo = pd.DataFrame({
        'Ano': anos_nivel.year,
        'Nivel_Medio_Mar_cm': 10 + np.cumsum(np.random.rand(30) * 0.2 + 0.1), 
    })

    # 4. CEMADEN (Alerta de Deslizamento - Simula√ß√£o por Estado)
    df_risco = pd.DataFrame({
        'Estado': ['RJ', 'SP', 'ES', 'BA', 'PE', 'SC'],
        'Alertas_Recentes': [35, 28, 15, 10, 5, 20], 
    }).sort_values('Alertas_Recentes', ascending=False)
    
    # 5. Marinha do Brasil (Previs√£o de Mar√© - 48 horas)
    horas = pd.date_range(start=datetime.now(), periods=48, freq='H') 
    df_mare = pd.DataFrame({
        'Data_Hora': horas,
        'Nivel_Mar√©_m': [0.5, 0.8, 1.2, 1.0, 0.6, 0.2, 0.1, 0.4, 0.9, 1.5, 1.3, 0.7, 0.4, 0.8, 1.3, 1.1, 0.7, 0.3, 0.2, 0.5, 1.0, 1.4, 1.2, 0.6] * 2,
    }).set_index('Data_Hora')

    # 6. SiBBr (Ocorr√™ncias de Branqueamento de Corais por Ano)
    anos_corais = pd.date_range(start='2018-01-01', periods=8, freq='Y')
    df_corais = pd.DataFrame({
        'Ano': anos_corais.year,
        'Ocorrencias_Branqueamento': [5, 3, 10, 7, 15, 12, 18, 20], 
    })

    return df_tendencia, df_vento, df_nivel_longo, df_risco, df_mare, df_corais

# Chama a fun√ß√£o de dados simulados
df_tendencia, df_vento, df_nivel_longo, df_risco, df_mare, df_corais = get_dados_simulados()


# --- 2. Defini√ß√£o dos T√≥picos de Cultura Oce√¢nica (6 T√≥picos) ---
TOPICOS = [
    {
        "titulo": "1. Aumento do N√≠vel do Mar",
        "causas": "Degelo polar e **expans√£o t√©rmica** da √°gua (aquecimento global).",
        "influencia": "Afeta os 8.500 km da costa brasileira, amea√ßando cidades e ilhas costeiras.",
        "consequencias": "Acelera√ß√£o da **eros√£o costeira**, inunda√ß√µes frequentes e saliniza√ß√£o da √°gua pot√°vel subterr√¢nea.",
        "dica": "Apoiar planos municipais de adapta√ß√£o e exigir infraestrutura resiliente em √°reas costeiras.",
    },
    {
        "titulo": "2. Acidifica√ß√£o Oce√¢nica",
        "causas": "O oceano absorve o **di√≥xido de carbono ($CO_2$)** da atmosfera (emiss√µes e **desmatamento**).",
        "influencia": "Diretamente ligada √†s emiss√µes brasileiras e prejudica a capacidade do oceano de absorver mais $CO_2$.",
        "consequencias": "Dificuldade de corais, ostras e mariscos em formar conchas. Risco √† **aquicultura**.",
        "dica": "Reduzir o consumo de carne bovina e apoiar a transi√ß√£o para energias renov√°veis.",
    },
    {
        "titulo": "3. Eventos Clim√°ticos Extremos",
        "causas": "Altera√ß√µes nos padr√µes de circula√ß√£o (**El Ni√±o** e **La Ni√±a**) intensificando os fen√¥menos.",
        "influencia": "Intensifica **secas prolongadas** (Nordeste) e **chuvas torrenciais** e deslizamentos (Sul/Sudeste).",
        "consequencias": "Deslizamentos de terra em encostas litor√¢neas, perdas na pesca e danos √† infraestrutura portu√°ria.",
        "dica": "Consultar a previs√£o de tempo e mar√© da **Marinha/INMET** e participar de sistemas de alerta comunit√°rio (CEMADEN).",
    },
    {
        "titulo": "4. Branqueamento de Corais",
        "causas": "Aumento r√°pido da **Temperatura da Superf√≠cie do Mar (TSM)**, levando ao estresse t√©rmico.",
        "influencia": "Afeta os recifes de corais, como os de **Abrolhos** (BA), que s√£o ber√ß√°rios de vida marinha.",
        "consequencias": "Morte dos corais, perda de habitat e redu√ß√£o da prote√ß√£o costeira natural.",
        "dica": "Apoiar projetos de monitoramento de corais e usar protetores solares *reef safe*.",
    },
    {
        "titulo": "5. Polui√ß√£o Marinha por Pl√°stico",
        "causas": "Gest√£o inadequada de res√≠duos s√≥lidos em **cidades costeiras** e descarte em rios.",
        "influencia": "Grandes rios atuam como canais de transporte de res√≠duos, tornando o Brasil um grande contribuinte de lixo marinho.",
        "consequencias": "Ingest√£o e sufocamento da **fauna marinha** e contamina√ß√£o por **micropl√°sticos** na cadeia alimentar.",
        "dica": "Praticar os 3 R's (**Reduzir, Reutilizar, Reciclar**) e participar de mutir√µes de limpeza.",
    },
    {
        "titulo": "6. Impacto na Pesca Artesanal",
        "causas": "Mudan√ßa nas rotas migrat√≥rias dos peixes devido √† **temperatura da √°gua** e altera√ß√µes nas correntes.",
        "influencia": "Afeta a principal fonte de renda e subsist√™ncia de comunidades pesqueiras tradicionais brasileiras.",
        "consequencias": "Diminui√ß√£o do estoque pesqueiro, inseguran√ßa alimentar e √™xodo das comunidades costeiras.",
        "dica": "Apoiar a **pesca sustent√°vel** e consumir peixes certificados que n√£o estejam em risco de extin√ß√£o.",
    },
]


# --- 3. LAYOUT UNIFICADO (ABAS) ---

tab_graficos, tab_analise = st.tabs(["üìä Gr√°ficos de Dados Abertos e Tend√™ncias", "üí° An√°lise e Conscientiza√ß√£o no Brasil"])

# =================================================================
# ABA 1: GR√ÅFICOS DE DADOS ABERTOS (UNIFICADO)
# =================================================================
with tab_graficos:
    st.header("1. Tend√™ncias de Longo Prazo e Risco")
    
    col_temp, col_nivel, col_risco = st.columns(3)
    
    with col_temp:
        st.markdown("##### Temperatura M√©dia Anual (INMET)")
        fig_temp = px.line(df_tendencia, x='Ano', y='Temp_Media_Anual_C', markers=True, height=250)
        st.plotly_chart(fig_temp, use_container_width=True)
    
    with col_nivel:
        st.markdown("##### Aumento do N√≠vel do Mar (NOAA)")
        fig_nivel = px.line(df_nivel_longo, x='Ano', y='Nivel_Medio_Mar_cm', line_shape='spline', height=250)
        st.plotly_chart(fig_nivel, use_container_width=True)

    with col_risco:
        st.markdown("##### Alertas de Deslizamentos (CEMADEN)")
        fig_risco = px.bar(df_risco, x='Estado', y='Alertas_Recentes', height=250)
        st.plotly_chart(fig_risco, use_container_width=True)

    st.markdown("---")
    
    st.header("2. Previs√£o Operacional e Biodiversidade")
    
    col_mare, col_vento, col_corais = st.columns(3)

    with col_mare:
        st.markdown("##### Previs√£o de N√≠vel da Mar√© (Marinha do Brasil)")
        fig_mare = px.area(df_mare.reset_index(), x='Data_Hora', y='Nivel_Mar√©_m', height=250)
        st.plotly_chart(fig_mare, use_container_width=True)
        
    with col_vento:
        st.markdown("##### Previs√£o de Vento Di√°rio (OpenWeatherMap)")
        fig_vento = px.bar(df_vento, x='Dia', y='Velocidade_Vento_N√≥s', height=250)
        st.plotly_chart(fig_vento, use_container_width=True)

    with col_corais:
        st.markdown("##### Ocorr√™ncias de Branqueamento (SiBBr)")
        fig_corais = px.bar(df_corais, x='Ano', y='Ocorrencias_Branqueamento', height=250)
        st.plotly_chart(fig_corais, use_container_width=True)

    st.caption("Fonte: Dados provenientes de APIs abertas (INMET, NOAA, Marinha, CEMADEN, SiBBr, OpenWeatherMap) - **Simula√ß√£o para Template**.")


# =================================================================
# ABA 2: AN√ÅLISE E CONSCIENTIZA√á√ÉO (UNIFICADO)
# =================================================================
with tab_analise:
    st.header("An√°lise Expl√≠cita de Impactos: Cultura Oce√¢nica no Brasil")
    st.info("Aprofunde-se nas causas e consequ√™ncias do clima no oceano brasileiro. Sua a√ß√£o √© fundamental.")

    # Exibi√ß√£o dos T√≥picos
    for i, topico in enumerate(TOPICOS):
        st.markdown(f"### {topico['titulo']}")
        st.markdown("---")
        
        col_causas, col_influencia, col_cons, col_dica = st.columns(4)

        with col_causas:
            st.markdown(f"**Causas:**")
            st.write(f"üëâ {topico['causas']}")
        
        with col_influencia:
            st.markdown(f"**O que Influencia:**")
            st.warning(f"üí° {topico['influencia']}")
        
        with col_cons:
            st.markdown(f"**Consequ√™ncias no Brasil:**")
            st.error(f"‚ö†Ô∏è {topico['consequencias']}")
            
        with col_dica:
            st.markdown(f"**A√ß√£o de Cultura Oce√¢nica (Dica):**")
            st.success(f"‚úÖ {topico['dica']}")
        
        if i < len(TOPICOS) - 1:
            st.markdown("---")
